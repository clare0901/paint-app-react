{"version":3,"sources":["components/Header.js","components/Name.js","components/ColorPicker.js","components/WindowSize.js","components/RefreshButton.js","components/ClearButton.js","components/Save.js","components/Canvas.js","components/Paint.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","style","backgroundColor","color","Name","React","memo","useState","name","setName","ref","nameRef","type","value","placeholder","onChange","event","target","onClick","setSelectionRange","length","ColorPicker","colors","map","id","colorpickerRef","checked","activeColor","setActiveColor","background","useWindowSize","cb","window","innerWidth","innerHeight","windowWidth","windowHeight","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","RefreshButton","title","src","alt","ClearButton","Save","download","Canvas","width","setWidth","height","setHeight","drawing","setDrawing","canvasRef","useRef","ctx","stopDrawing","current","closePath","getContext","clearRect","document","getElementById","img","toDataURL","setAttribute","click","project_name","onMouseDown","e","beginPath","lineJoin","lineCap","lineWidth","strokeStyle","moveTo","clientX","offsetLeft","clientY","offsetTop","onMouseUp","onMouseOut","onMouseMove","coords","lineTo","stroke","handleMouseMove","Paint","setColors","getColors","useCallback","baseColor","randomColor","slice","fetch","then","response","json","data","hex","visible","setVisible","timeoutId","clearTimeout","setTimeout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9e5207d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Header(props){\r\n    // console.log(props.color)\r\n    return(\r\n        <header className=\"header\" style={{backgroundColor:props.color}} > \r\n            Paint App\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react';\r\n\r\n// used React.memo to avoid multiple rendering unneccesarily even though the state doesn't change\r\n\r\nconst Name = React.memo( (props) => {\r\n    // console.log(props);\r\n    const [name, setName] = useState('');\r\n\r\n    function handleChange(event){\r\n        setName(event.target.value)\r\n    }\r\n    \r\n    // upon one click the whole text will be selected\r\n    function handleClick(event){\r\n        return(\r\n            event.target.setSelectionRange(0,event.target.value.length)\r\n        );\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <div className=\"name\">\r\n                <input \r\n                ref={props.nameRef}\r\n                type=\"text\"\r\n                value={name}\r\n                placeholder=\"Unititled\"\r\n                onChange={handleChange}\r\n                onClick={handleClick}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\n\r\nexport default Name;","import React from 'react';\r\nimport '../App.css'\r\n\r\nfunction ColorPicker(props){\r\n    // console.log(props)\r\n    if (!props.colors.length) return null;\r\n    return(\r\n        <fieldset className=\"color-picker\">\r\n            {props.colors.map( (color,id) => (\r\n                <label key={id}>\r\n                    <input \r\n                    ref={props.colorpickerRef}\r\n                    type=\"radio\"\r\n                    name=\"color\"\r\n                    value={color}\r\n                    checked={props.activeColor === color}\r\n                    onChange={ () => props.setActiveColor(color)}\r\n                    />\r\n                    <span style={{ background:color }}></span>\r\n                </label>\r\n            ))}\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default ColorPicker;","import  { useState, useEffect } from 'react'\r\n\r\nfunction useWindowSize(cb) {\r\n  const [[windowWidth, windowHeight], setWindowSize] = useState([window.innerWidth, window.innerHeight])\r\n  \r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      cb();\r\n      setWindowSize([window.innerWidth, window.innerHeight])\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n  return [windowWidth, windowHeight]\r\n}\r\n\r\nexport default useWindowSize;","import React from 'react';\r\n\r\nconst RefreshButton = ((props) =>{\r\n    return(\r\n        <button className=\"refresh\" onClick={props.cb} title=\"Change Color\" >\r\n            <img src=\"https://img.icons8.com/windows/32/000000/refresh.png\" alt=\"Refresh-Icon\" />\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default RefreshButton","import React from 'react';\r\n\r\nconst ClearButton = ((props) =>{\r\n    return(\r\n        <button className=\"clear\" onClick={props.cb} title=\"Clear Screen\" >\r\n            <img src=\"https://img.icons8.com/material-sharp/30/000000/delete-trash.png\" alt=\"Clear-Icon\" />\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default ClearButton","import React from 'react';\r\n\r\nconst Save = ((props) =>{\r\n    // console.log(props.value.value);\r\n    return(\r\n        <button className=\"save\" onClick={props.cb} title=\"Download\" >\r\n            <a id=\"downloads\" download={props.value.value}></a>\r\n            <img src=\"https://img.icons8.com/android/32/000000/download.png\" alt=\"Download_Image\" />\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default Save;","import React, { useEffect, useRef, useState } from 'react';\r\nimport useWindowSize from './WindowSize'\r\nimport ClearButton from './ClearButton'\r\nimport Save from './Save'\r\nimport '../App.css'\r\n\r\nfunction Canvas(props){\r\n    // console.log(props.project_name.current);\r\n    const [width,setWidth] = useState(window.innerWidth);\r\n    const [height, setHeight] = useState(window.innerHeight);\r\n    const [drawing, setDrawing] = useState(false);\r\n\r\n    const [windowWidth, windowHeight] = useWindowSize(() => {\r\n        setWidth(window.innerWidth)\r\n        setHeight(window.innerHeight)\r\n    })\r\n\r\n    const canvasRef = useRef();\r\n    const ctx = useRef();\r\n\r\n    useEffect( () => {\r\n        ctx.current = canvasRef.current.getContext('2d');\r\n    },[])\r\n\r\n\r\n    function handleMouseMove(e){\r\n        // console.log(e);\r\n        const coords = [\r\n            e.clientX - canvasRef.current.offsetLeft,\r\n            e.clientY - canvasRef.current.offsetTop\r\n        ]\r\n        if (drawing){\r\n            ctx.current.lineTo(...coords);\r\n            ctx.current.stroke();\r\n        }\r\n        if(props.handleMouseMove){\r\n            props.handleMouseMove(...coords);\r\n        }\r\n    }\r\n\r\n    function startDrawing(e){\r\n        // console.log(e);\r\n        ctx.current.beginPath();\r\n        ctx.current.lineJoin=\"round\";\r\n        ctx.current.lineCap=\"round\";\r\n        ctx.current.lineWidth=\"10\"\r\n        ctx.current.strokeStyle= props.activeColor;\r\n        ctx.current.moveTo(\r\n            e.clientX - canvasRef.current.offsetLeft,\r\n            e.clientY - canvasRef.current.offsetTop,\r\n        );\r\n        setDrawing(true);\r\n    }\r\n\r\n    function stopDrawing(){\r\n        ctx.current.closePath();\r\n        setDrawing(false);  \r\n    }\r\n\r\n    function clearScreen(){\r\n        ctx.current.clearRect(0,0,width,height); \r\n    }\r\n    function saveImage(){\r\n        var download = document.getElementById(\"downloads\");\r\n        var canvas = canvasRef.current;\r\n        var img    = canvas.toDataURL(\"image/png\");\r\n        download.setAttribute(\"href\", img);\r\n        download.click();\r\n    }\r\n    return(\r\n        <div>\r\n            <ClearButton cb={clearScreen} />\r\n            <Save cb={saveImage} value={props.project_name.current} />\r\n            <canvas\r\n            className=\"canvas\"\r\n            ref={canvasRef}\r\n            width={windowWidth}\r\n            height={windowHeight}\r\n            onMouseDown={startDrawing}\r\n            onMouseUp={stopDrawing}\r\n            onMouseOut={stopDrawing}\r\n            onMouseMove={handleMouseMove}\r\n            >\r\n            </canvas>  \r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Canvas\r\n","// https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=monochrome\r\n\r\nimport React, { useCallback, useEffect, useState, useRef } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Name from \"./Name\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport useWindowSize from \"./WindowSize\";\r\nimport RefreshButton from \"./RefreshButton\";\r\nimport Canvas from \"./Canvas\";\r\nimport randomColor from \"randomcolor\";\r\nimport \"../App.css\";\r\n\r\nfunction Paint() {\r\n  const [colors, setColors] = useState([]);\r\n  const [activeColor, setActiveColor] = useState(null);\r\n\r\n  const getColors = useCallback(() => {\r\n    const baseColor = randomColor().slice(1);\r\n    fetch(`https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=monochrome`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setColors(data.colors.map((color) => color.hex.value));\r\n        setActiveColor(data.colors[0].hex.value);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(getColors, []);\r\n  \r\n//   the width * height logic using custom hooks\r\n  const [visible, setVisible] = useState(false);\r\n  let timeoutId = useRef();\r\n  const [windowWidth, windowHeight] = useWindowSize(() => {\r\n    setVisible(true);\r\n    clearTimeout(timeoutId.current);\r\n    timeoutId.current = setTimeout(() => setVisible(false), 500);\r\n  });\r\n  \r\n  const nameRef = useRef({value:\"Unititled\"});\r\n\r\n  return (\r\n    <div>\r\n      <Header color={activeColor} />\r\n      <Name nameRef={nameRef} />\r\n      <div>\r\n        <ColorPicker\r\n          colors={colors}\r\n          activeColor={activeColor}\r\n          setActiveColor={setActiveColor}\r\n        />\r\n        <RefreshButton cb={getColors} />\r\n      </div>\r\n      <Canvas\r\n        project_name={nameRef}\r\n        activeColor={activeColor}\r\n        height={window.innerHeight}\r\n        width={window.innerWidth}\r\n      />\r\n      <div className={`window-size ${visible ? \"\" : \"hidden\"}`}>\r\n        {windowWidth} x {windowHeight}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paint;\r\n","import './App.css';\n\nimport Paint from './components/Paint'\n\nfunction App() {\n  return (\n    <div>\n      <Paint />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}